{
  "sourceLanguage" : "en",
  "strings" : {
    "... and hidden separators" : {

    },
    ".animation(.easeIn(duration: 1))" : {

    },
    ".animation(.spring)" : {

    },
    ".animation(autoreverses: false))" : {

    },
    ".animation(repeatCount(3))" : {

    },
    ".backgroundStyle(.red)" : {

    },
    ".blue, 5" : {

    },
    ".blue.gradient, 10" : {

    },
    ".border" : {

    },
    ".bordered" : {

    },
    ".bordered, .disabled(true)" : {

    },
    ".bordered, .disabled(true): %lld" : {

    },
    ".bordered, .foregroundStyle(.red)" : {

    },
    ".bordered, .foregroundStyle(.red): %lld" : {

    },
    ".bordered, .tint(.red)" : {

    },
    ".bordered, .tint(.red): %lld" : {

    },
    ".bordered: %lld" : {

    },
    ".borderedProminent" : {

    },
    ".borderedProminent, .destructive: %lld" : {

    },
    ".borderedProminent, .disabled(true)" : {

    },
    ".borderedProminent, .disabled(true): %lld" : {

    },
    ".borderedProminent, .foregroundStyle(.red)" : {

    },
    ".borderedProminent, .foregroundStyle(.red): %lld" : {

    },
    ".borderedProminent, .tint(.red)" : {

    },
    ".borderedProminent, .tint(.red): %lld" : {

    },
    ".borderedProminent: %lld" : {

    },
    ".buttonStyle(.bordered)" : {

    },
    ".buttonStyle(.plain)" : {

    },
    ".clipped()" : {

    },
    ".clipShape" : {

    },
    ".clipShape(.capsule)" : {

    },
    ".colorInvert()" : {

    },
    ".destructive" : {

    },
    ".destructive: %lld" : {

    },
    ".disabled(true)" : {

    },
    ".disabled(true): %lld" : {

    },
    ".fill" : {

    },
    ".fill.animation" : {

    },
    ".font" : {

    },
    ".font.animation" : {

    },
    ".font(.title)" : {

    },
    ".foreground/.background" : {

    },
    ".foreground/.background.animation" : {

    },
    ".foregroundStyle(.red)" : {

    },
    ".foregroundStyle(.red), .disabled(true)" : {

    },
    ".foregroundStyle(.red), .disabled(true): %lld" : {

    },
    ".foregroundStyle(.red): %lld" : {

    },
    ".frame" : {

    },
    ".frame.animation" : {

    },
    ".frame(100, 100)" : {

    },
    ".frame(100, 100)\nclipped" : {

    },
    ".grayscale(0.25)" : {

    },
    ".grayscale(0.99)" : {

    },
    ".init(_ label:action:): %lld" : {

    },
    ".init(_:destination:)" : {

    },
    ".init(_:icon:)" : {

    },
    ".init(_:systemImage:)" : {

    },
    ".init(_:text:)" : {

    },
    ".init(action:label:): %lld" : {

    },
    ".init(destination:label:)" : {

    },
    ".init(text:label:)" : {

    },
    ".labelsHidden():" : {

    },
    ".lineLimit(1): This is some long text that should wrap when it exceeds the width of its frame" : {

    },
    ".material3SegmentedButton" : {

    },
    ".offset" : {

    },
    ".offset.animation" : {

    },
    ".offset(-50, 50)" : {

    },
    ".offset(0, 0)" : {

    },
    ".offset(50, -50)" : {

    },
    ".offset(CGSize(50, 50))" : {

    },
    ".onDelete" : {

    },
    ".onMove" : {

    },
    ".onMove, .onDelete" : {

    },
    ".opacity" : {

    },
    ".opacity.animation" : {

    },
    ".opacity.animation\n(different value)" : {

    },
    ".padding()" : {

    },
    ".padding([.top, .leading])" : {

    },
    ".pickerStyle(.navigationLink)" : {

    },
    ".pickerStyle(.segmented)" : {

    },
    ".placeholder" : {

    },
    ".plain" : {

    },
    ".plain .disabled(true)" : {

    },
    ".plain .foregroundStyle(.red)" : {

    },
    ".plain .tint(.red)" : {

    },
    ".plain, .disabled(true): %lld" : {

    },
    ".plain: %lld" : {

    },
    ".position(0, 0)" : {

    },
    ".position(50, 50)" : {

    },
    ".position(CGPoint(75, 75))" : {

    },
    ".preferredColorScheme" : {

    },
    ".red" : {

    },
    ".red.gradient" : {

    },
    ".red.opacity(0.5)" : {

    },
    ".repeatForever()" : {

    },
    ".resizable\n.frame(100, 100)" : {

    },
    ".resizable()\n.aspectRatio(0.33, .fill)\n.frame(100, 100)\n.clipped" : {

    },
    ".resizable()\n.aspectRatio(0.33, .fit)\n.frame(100, 100)" : {

    },
    ".resizable()\n.aspectRatio(3, .fit)\n.frame(100, 100)" : {

    },
    ".resizable()\n.aspectRatio(3, .fit)\n.frame(100, 100)\n.foregroundStyle(.red)" : {

    },
    ".resizable()\n.frame(100, 100)" : {

    },
    ".resizable()\n.scaleToFill\n.frame(100, 100)\n.clipped" : {

    },
    ".resizable()\n.scaleToFit\n.frame(100, 100)" : {

    },
    ".rotation3DEffects" : {

    },
    ".rotationEffect" : {

    },
    ".rotationEffect.animation" : {

    },
    ".scaleEffect" : {

    },
    ".scaleEffect.animation" : {

    },
    ".tint(.red)" : {

    },
    ".tint(.red), .disabled(true)" : {

    },
    ".tint(.red), .disabled(true): %lld" : {

    },
    ".tint(.red): %lld" : {

    },
    ".topLeading Text" : {

    },
    "\"CustomRed\"" : {

    },
    "\"SystemBlue\"" : {

    },
    "(###) ###-####" : {

    },
    "@Environment(\\.openURL)" : {

    },
    "%@ .deleteDisabled" : {

    },
    "%@ .moveDisabled" : {

    },
    "+ Title" : {

    },
    "2/3" : {

    },
    "123" : {

    },
    "A" : {

    },
    "AA" : {

    },
    "AAAA" : {

    },
    "About" : {

    },
    "Accent color" : {

    },
    "Add item" : {

    },
    "After" : {

    },
    "After another section empty row" : {

    },
    "After expanding" : {

    },
    "After fixed" : {

    },
    "After initial empty row" : {

    },
    "After initial section empty row" : {

    },
    "After minLength" : {

    },
    "After vstack" : {

    },
    "Alert" : {
      "comment" : "Title of Alert playground"
    },
    "alignment: .bottomTrailing" : {

    },
    "alignment: .topLeading" : {

    },
    "Also see the `Transition` playground for view enter/exit animations" : {

    },
    "Animated" : {

    },
    "Animation" : {
      "comment" : "Title of Animation playground"
    },
    "Appearance" : {
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Apariencia"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Apparence"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "外観"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "外观"
          }
        }
      }
    },
    "Asset JPEG Image" : {

    },
    "Asset SVG Image" : {

    },
    "AsyncImage" : {

    },
    "B" : {

    },
    "Back button is disabled. Tap to dismiss" : {

    },
    "Background" : {
      "comment" : "Title of Background playground"
    },
    "background()" : {

    },
    "BB" : {

    },
    "BBBB" : {

    },
    "Before" : {

    },
    "Before final empty row" : {

    },
    "Before final section empty row" : {

    },
    "Before fixed" : {

    },
    "Before minLength" : {

    },
    "Before vstack" : {

    },
    "Binding" : {

    },
    "Binding View" : {

    },
    "Black" : {

    },
    "Blue" : {

    },
    "Blur" : {
      "comment" : "Title of Blur playground"
    },
    "Bold" : {

    },
    "Bool AppStorage" : {

    },
    "Boolean: %@" : {

    },
    "Border" : {
      "comment" : "Title of Border playground"
    },
    "Bottom" : {

    },
    "Bottom text" : {

    },
    "Bound tap count 1: %lld" : {

    },
    "Bound tap count 2: %lld" : {

    },
    "Brown" : {

    },
    "Bundled Image" : {

    },
    "Butterfly SVG image" : {

    },
    "Button" : {
      "comment" : "Title of Button playground"
    },
    "Button .automatic" : {

    },
    "Button .bordered" : {

    },
    "Button 1" : {

    },
    "Button 2" : {

    },
    "Button 3" : {

    },
    "Button in custom view" : {

    },
    "C" : {

    },
    "Cancel" : {

    },
    "Capsule" : {

    },
    "Cat JPEG image" : {

    },
    "CC" : {

    },
    "CCCC" : {

    },
    "Circle" : {

    },
    "Circles" : {

    },
    "Clear" : {

    },
    "Color" : {
      "comment" : "Title of Color playground"
    },
    "Color + Offset" : {

    },
    "ColorScheme" : {
      "comment" : "Title of ColorScheme playground"
    },
    "Complex content button" : {

    },
    "ConfirmationDialog" : {
      "comment" : "Title of ConfirmationDialog playground"
    },
    "Container" : {

    },
    "Content %lld" : {

    },
    "Content below" : {

    },
    "Content row %lld" : {

    },
    "Content sizes to stack:" : {

    },
    "Current Page: %lld" : {

    },
    "Custom" : {

    },
    "Custom Cancel" : {

    },
    "Custom closure" : {

    },
    "Custom Font" : {

    },
    "Custom placeholder" : {

    },
    "Custom styling" : {

    },
    "Cyan" : {

    },
    "Dark" : {
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Oscuro"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Sombre"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ダーク"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "暗"
          }
        }
      }
    },
    "Data" : {

    },
    "Data: %@" : {

    },
    "Data: %lld" : {

    },
    "Date only" : {

    },
    "DatePicker" : {
      "comment" : "Title of DatePicker playground"
    },
    "DatePicker .disabled" : {

    },
    "Default" : {

    },
    "Destructive" : {

    },
    "Disabled" : {

    },
    "DisclosureGroup" : {
      "comment" : "Title of DisclosureGroup playground"
    },
    "DisclosureGroup .disabled" : {

    },
    "Dismiss" : {

    },
    "Dismiss via environment" : {

    },
    "Dismiss via state" : {

    },
    "Divider" : {
      "comment" : "Title of Divider playground"
    },
    "Double AppStorage" : {

    },
    "EllipitcalGradient" : {

    },
    "Ellipse" : {

    },
    "Enter text" : {

    },
    "Enum AppStorage" : {

    },
    "Enum: %@" : {

    },
    "EnvironmentObject" : {

    },
    "EnvironmentObject tap count: %lld" : {

    },
    "Even" : {

    },
    "Favorites" : {

    },
    "Fill" : {

    },
    "Fill & Stroke" : {

    },
    "fill(.red.gradient)" : {

    },
    "fill(.red)" : {

    },
    "fill(.red)\n  .stroke(.green, lineWidth: 10)" : {

    },
    "First" : {

    },
    "First: %lld" : {

    },
    "Five Buttons" : {

    },
    "Fixed content" : {

    },
    "Fixed width" : {

    },
    "FocusState" : {
      "comment" : "Title of FocusState playground"
    },
    "Font.body" : {

    },
    "Font.body: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.callout" : {

    },
    "Font.callout: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.caption" : {

    },
    "Font.caption: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.caption2" : {

    },
    "Font.caption2: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.footnote" : {

    },
    "Font.footnote: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.headline" : {

    },
    "Font.headline: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.largeTitle" : {

    },
    "Font.largeTitle: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.subheadline" : {

    },
    "Font.subheadline: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.title" : {

    },
    "Font.title: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.title2" : {

    },
    "Font.title2: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Font.title3" : {

    },
    "Font.title3: This is some long text that we use to preview the default line spacing under different fonts. The quick brown fox jumped over the lazy dog." : {

    },
    "Footer" : {

    },
    "Footer 2" : {

    },
    "Footer 3" : {

    },
    "ForEach index row: %lld" : {

    },
    "ForEach row: %lld.%lld" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "ForEach row: %1$lld.%2$lld"
          }
        }
      }
    },
    "ForEach row: 1.%lld" : {

    },
    "ForEach row: 2.%lld" : {

    },
    "ForEach row: 3.%lld" : {

    },
    "ForEach section %lld" : {

    },
    "ForEach state" : {

    },
    "ForEach taps: %lld" : {

    },
    "ForEach:" : {

    },
    "Form" : {
      "comment" : "Title of Form playground"
    },
    "Frame" : {
      "comment" : "Title of Frame playground"
    },
    "Full screen .topLeading container" : {

    },
    "Full screen .topLeading content" : {

    },
    "Gradient" : {
      "comment" : "Title of Gradient playground"
    },
    "Graphics" : {
      "comment" : "Title of Graphics playground"
    },
    "Gray" : {

    },
    "Green" : {

    },
    "Grids" : {
      "comment" : "Title of Grids playground"
    },
    "height: 50" : {

    },
    "Hello" : {

    },
    "Hello [%@](https://skip.tools)!" : {
      "extractionState" : "stale",
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "¡Hola [%@](https://skip.tools)!"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Bonjour [%@](https://skip.tools)!"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "こんにちは、[%@](https://skip.tools)!"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "你好，[%@](https://skip.tools)!"
          }
        }
      }
    },
    "Hit testing" : {

    },
    "Home" : {
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Inicio"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Accueil"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ホーム"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "主页"
          }
        }
      }
    },
    "HStack maxWidth: .infinity" : {

    },
    "HSV" : {

    },
    "I heard you like TabViews so we put a TabView inside your TabView inside your TabView" : {

    },
    "Icon + Title" : {

    },
    "Icon Only" : {

    },
    "Icon Only:" : {

    },
    "Icons" : {
      "comment" : "Title of Icons playground"
    },
    "Image" : {
      "comment" : "Title of Image playground"
    },
    "Image from Data" : {

    },
    "in: 0...2 step 0.5" : {

    },
    "in: 0...1000 step 25" : {

    },
    "in: Capsule()" : {

    },
    "Inc" : {

    },
    "Increment counter: %lld" : {

    },
    "Increment last" : {

    },
    "Indeterminate" : {

    },
    "Indeterminate linear" : {

    },
    "Indeterminate, .tint(.red)" : {

    },
    "Indexed ForEach" : {

    },
    "Indigo" : {

    },
    "Infinite frame with padding" : {

    },
    "Initializing a localized key **does** format as markdown:" : {

    },
    "Inner button" : {

    },
    "inset(by: 10)" : {

    },
    "Interactive dismiss: %@" : {

    },
    "isOn" : {

    },
    "isSearching:" : {

    },
    "Italic" : {

    },
    "Item %lld" : {

    },
    "Label" : {
      "comment" : "Title of Label playground"
    },
    "Label .font(.title)" : {

    },
    "Label .foregroundStyle(.red)" : {

    },
    "Label .listItemTint(.red)" : {

    },
    "Label .navigationLink" : {

    },
    "Label .tint(.red)" : {

    },
    "Label in NavigationLink" : {

    },
    "Label items" : {

    },
    "Label Styles" : {

    },
    "Large circle" : {

    },
    "LazyHGrid .adaptive" : {

    },
    "LazyHGrid .bottom" : {

    },
    "LazyHGrid .fixed" : {

    },
    "LazyHGrid .flexible" : {

    },
    "LazyHGrid sectioned" : {

    },
    "LazyHGridView" : {

    },
    "LazyHStack" : {

    },
    "LazyVGrid .adaptive" : {

    },
    "LazyVGrid .fixed" : {

    },
    "LazyVGrid .flexible" : {

    },
    "LazyVGrid .padding" : {

    },
    "LazyVGrid .trailing" : {

    },
    "LazyVGrid refreshable" : {

    },
    "LazyVGrid sectioned" : {

    },
    "LazyVGridView" : {

    },
    "LazyVStack" : {

    },
    "Light" : {
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Claro"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Clair"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ライト"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "光"
          }
        }
      }
    },
    "LinearGradient" : {

    },
    "Link" : {
      "comment" : "Title of Link playground"
    },
    "List" : {
      "comment" : "Title of List playground"
    },
    "Long values" : {

    },
    "Markdown\n\n- Block\n-Elements\n\nare **not** supported" : {

    },
    "Markdown\nspanning multiple\nlines" : {

    },
    "Markdown [Link text](https://skip.tools) and [%@](%@)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Markdown [Link text](https://skip.tools) and [%1$@](%2$@)"
          }
        }
      }
    },
    "Markdown **Bold text**" : {

    },
    "Markdown **Bold text** with .italic()" : {

    },
    "Markdown **bold** %@ is not formatted" : {

    },
    "Markdown *Italic text* including _underscores_" : {

    },
    "Markdown `Code text`" : {

    },
    "Markdown ~~Strikethrough text~~" : {

    },
    "maxWidth: .infinity, maxHeight: .infinity" : {

    },
    "Menu" : {
      "comment" : "Title of Menu playground"
    },
    "Mint" : {

    },
    "minWidth" : {

    },
    "minWidth: 100, maxHeight: .infinity\n  maxWidth: .infinity, maxHeight: .infinity" : {

    },
    "minWidth: 300, minHeight: 100\n  minHeight: 100, maxHeight: .infinity" : {

    },
    "More (page 2)" : {

    },
    "Multi page with indicator hidden" : {

    },
    "multilineTextAlignment: This is some long text that should wrap when it exceeds the width of its frame" : {

    },
    "Name" : {
      "extractionState" : "stale",
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Nombre"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Nom"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "名前"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "姓名"
          }
        }
      }
    },
    "Navigate back" : {

    },
    "Navigate forward" : {

    },
    "NavigationLink" : {

    },
    "NavigationLink .buttonStyle" : {

    },
    "NavigationPath binding sheet" : {

    },
    "NavigationStack" : {
      "comment" : "Title of NavigationStack playground"
    },
    "Negative padding" : {

    },
    "Nested" : {

    },
    "Nested Again" : {

    },
    "Nested ForEach row: %lld.%lld" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Nested ForEach row: %1$lld.%2$lld"
          }
        }
      }
    },
    "Nested menu" : {

    },
    "Nil data" : {

    },
    "Nil Data" : {

    },
    "Nil Enum" : {

    },
    "NO" : {

    },
    "No URL" : {

    },
    "No URL\n.frame(100, 100)" : {

    },
    "Note: colors should not affect Divider appearance" : {

    },
    "Note: Picker displays differently when in a Form. See the Form playground" : {

    },
    "Note: tint should not affect Label appearance" : {

    },
    "Observable" : {

    },
    "Observable tap count: %lld" : {

    },
    "offset(x: 30, y: 10)" : {

    },
    "Offset/Position" : {
      "comment" : "Title of Offset/Position playground"
    },
    "OnSubmit" : {
      "comment" : "Title of OnSubmit playground"
    },
    "Option" : {

    },
    "Option %lld" : {

    },
    "Option 1" : {

    },
    "Option 2" : {

    },
    "Option 3" : {

    },
    "Option 4" : {

    },
    "Orange" : {

    },
    "Over here!" : {

    },
    "Overlay" : {
      "comment" : "Title of Overlay playground"
    },
    "Overridden to title font" : {

    },
    "Page 2" : {

    },
    "Paging" : {

    },
    "Passing a string var does not format as markdown:" : {

    },
    "Passkey" : {

    },
    "Password" : {

    },
    "path += [%lld, %lld]" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "path += [%1$lld, %2$lld]"
          }
        }
      }
    },
    "Path binding sheet" : {

    },
    "Path binding sheet with initial stack" : {

    },
    "Path count: %lld" : {

    },
    "Path: %@" : {

    },
    "path.append(\"X\")" : {

    },
    "path.append(%@)" : {

    },
    "path.append(%lld)" : {

    },
    "path.removeLast()" : {

    },
    "path.removeLast(2)" : {

    },
    "path.removeLast(2); path.append(%lld)" : {

    },
    "path.reverse()" : {

    },
    "PDF Image" : {

    },
    "Picker" : {
      "comment" : "Title of Picker playground"
    },
    "Picker .disabled" : {

    },
    "Picker .foregroundStyle(.red)" : {

    },
    "Picker .labelsHidden (below)" : {

    },
    "Picker .navigationLink" : {

    },
    "Picker .segmented" : {

    },
    "Picker .tint(.red)" : {

    },
    "Pink" : {

    },
    "Pink Row Background" : {

    },
    "Plain" : {

    },
    "Pop" : {

    },
    "Pop %lld / %lld" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Pop %1$lld / %2$lld"
          }
        }
      }
    },
    "Powered by [Skip](https://skip.tools)" : {

    },
    "Powered by Skip and %@" : {
      "extractionState" : "stale",
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Potenciado por %@"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Propulsé par %@"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "%@動力"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "由%@提供动力"
          }
        }
      }
    },
    "Present" : {

    },
    "Present another" : {

    },
    "Present full screen cover with navigation stack" : {

    },
    "Present full screen cover with simple content" : {

    },
    "Present item sheet: %lld" : {

    },
    "Present sheet with medium detent" : {

    },
    "Present sheet with navigation stack" : {

    },
    "Present sheet with simple content" : {

    },
    "Present with binding" : {

    },
    "Present with data" : {

    },
    "Primary" : {

    },
    "PrimaryAction: %lld" : {

    },
    "Principal: %lld" : {

    },
    "Progress 0.5" : {

    },
    "Progress 0.5 circular" : {

    },
    "Progress 0.5, .tint(.red)" : {

    },
    "Progress nil" : {

    },
    "ProgressView" : {
      "comment" : "Title of ProgressView playground"
    },
    "Prompt" : {

    },
    "Purple" : {

    },
    "Push" : {

    },
    "Push another" : {

    },
    "Push binding" : {

    },
    "Push binding view" : {

    },
    "Push Text.position(100, 100)" : {

    },
    "Pushed" : {

    },
    "RadialGradient" : {

    },
    "Radius" : {

    },
    "Rectangle" : {

    },
    "Red" : {

    },
    "Red, .opacity(0.5)" : {

    },
    "Redacted" : {
      "comment" : "Title of Redacted playground"
    },
    "Refreshable" : {

    },
    "Remapped URL" : {

    },
    "Repository item tap count: %lld" : {

    },
    "Requires iOS 17+" : {

    },
    "RGB" : {

    },
    "Rotation" : {

    },
    "rotation(Angle(degrees: 45))" : {

    },
    "RoundedRectangle" : {

    },
    "Row %lld" : {

    },
    "Row 1" : {

    },
    "Row 1.1" : {

    },
    "Row 2" : {

    },
    "Row 2.1" : {

    },
    "Row 3a" : {

    },
    "Row 3b" : {

    },
    "Row: 1.%lld" : {

    },
    "Row: 2.%lld" : {

    },
    "scale, rotate, offset, stroke" : {

    },
    "scale: 2" : {

    },
    "scale(x: 0.5, y: 1.2)" : {

    },
    "scale(x: 1, y: -1)" : {

    },
    "Scroll to 0" : {

    },
    "Scroll to 15" : {

    },
    "Scroll to 29" : {

    },
    "Scroll to Page 2" : {

    },
    "Scroll View Stacks" : {

    },
    "Scrolling" : {

    },
    "ScrollView" : {
      "comment" : "Title of ScrollView playground"
    },
    "Searchable" : {
      "comment" : "Title of Searchable playground"
    },
    "Second" : {

    },
    "Second: %lld" : {

    },
    "Secondary" : {

    },
    "Section" : {

    },
    "Section %lld Header" : {

    },
    "Section 0" : {

    },
    "Section 0 (Fixed)" : {

    },
    "Section 1" : {

    },
    "Section 2" : {

    },
    "Section footer" : {

    },
    "Secure Field" : {

    },
    "SecureField" : {
      "comment" : "Title of SecureField playground"
    },
    "Set focus to A via Boolean" : {

    },
    "Set focus to A via Enum" : {

    },
    "Set focus to B via Enum" : {

    },
    "Settings" : {
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Configuración"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Paramètres"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "設定"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "设置"
          }
        }
      }
    },
    "Shadow" : {
      "comment" : "Title of Shadow playground"
    },
    "Shape" : {
      "comment" : "Title of Shape playground"
    },
    "Shape with background" : {

    },
    "Shape with overlay" : {

    },
    "Sheet" : {
      "comment" : "Title of Sheet playground"
    },
    "Showcase" : {

    },
    "Showcase Icon" : {

    },
    "Showcase is a dual-platform app written in Swift and SwiftUI. It demonstrates and exercises Skip's support for various SwiftUI constructs." : {

    },
    "Sign In" : {

    },
    "Single page with indicator showing" : {

    },
    "Sized to content:" : {

    },
    "Skip Technology" : {
      "comment" : "Localized technology title"
    },
    "skiplogo PDF image" : {

    },
    "Slider" : {
      "comment" : "Title of Slider playground"
    },
    "Small circle" : {

    },
    "Source" : {

    },
    "Spacer" : {
      "comment" : "Title of Spacer playground"
    },
    "Stacks" : {
      "comment" : "Title of Stacks playground"
    },
    "Standalone row 1" : {

    },
    "Standalone row 2" : {

    },
    "Standalone row 3" : {

    },
    "Standard" : {

    },
    "Standard Row Background" : {

    },
    "State" : {
      "comment" : "Title of State playground"
    },
    "State tap count: %lld" : {

    },
    "Storage" : {
      "comment" : "Title of Storage playground"
    },
    "Storage Binding" : {

    },
    "Strikethrough" : {

    },
    "String init" : {

    },
    "Stroke" : {

    },
    "stroke x2" : {

    },
    "stroke(.red,\n    style: StrokeStyle(\n    lineWidth: 10,\n      dash: [10]))" : {

    },
    "stroke(.red, lineWidth: 10)" : {

    },
    "stroke(.red.gradient, lineWidth: 10)" : {

    },
    "stroke()" : {

    },
    "strokeBorder(.red, lineWidth: 10)" : {

    },
    "Struct" : {

    },
    "Struct (field)" : {

    },
    "Struct tap count (field): %lld" : {

    },
    "Struct tap count: %lld" : {

    },
    "Submit" : {

    },
    "Switch to Favorites" : {

    },
    "Switch to Home" : {

    },
    "Switch to Paging" : {

    },
    "Symbol" : {
      "comment" : "Title of Symbol playground"
    },
    "Symbol Image Sizes" : {

    },
    "Symbol Image Weights" : {

    },
    "System" : {
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Sistema"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Système"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "システム"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "系统"
          }
        }
      }
    },
    "System Information" : {

    },
    "systemName" : {

    },
    "TabView" : {
      "comment" : "Title of TabView playground"
    },
    "Tap" : {

    },
    "Tap below to increment state tap count" : {

    },
    "Tap count: %lld" : {

    },
    "Tap Count: %lld" : {

    },
    "Tap to dismiss" : {

    },
    "Teal" : {

    },
    "Test 1" : {

    },
    "Test 2" : {

    },
    "Test A\nTest B\nTest C\nTest D\nTest E" : {

    },
    "Text" : {
      "comment" : "Title of Text playground"
    },
    "Text & Divider" : {

    },
    "Text field" : {

    },
    "Text Field" : {

    },
    "Text with background" : {

    },
    "Text1" : {

    },
    "Text1 gy" : {

    },
    "Text2" : {

    },
    "Text2 TA" : {

    },
    "textA" : {

    },
    "textB" : {

    },
    "TextEditor" : {
      "comment" : "Title of Text playground"
    },
    "TextField" : {
      "comment" : "Title of TextField playground"
    },
    "Thin footnote container" : {

    },
    "Third" : {

    },
    "Third: %lld" : {

    },
    "This is a horizontally swipable paging TabView" : {

    },
    "This is the alert message to show beneath the title" : {

    },
    "This is the message" : {

    },
    "This text is in %@ mode" : {

    },
    "Three Buttons" : {

    },
    "Time only" : {

    },
    "Title" : {

    },
    "Title + Message" : {

    },
    "Title bold italic" : {

    },
    "Title Only" : {

    },
    "Toggle" : {
      "comment" : "Title of Toggle playground"
    },
    "Toggle Group" : {

    },
    "Toggle with label text that is too long to fit on a single line and should be wrapped" : {

    },
    "Toolbar" : {
      "comment" : "Title of Toolbar playground"
    },
    "Top" : {

    },
    "Transforms" : {

    },
    "Two Buttons" : {

    },
    "Underline" : {

    },
    "UnevenRoundedRectangle" : {

    },
    "Username" : {

    },
    "Value %lld" : {

    },
    "Value: %@" : {

    },
    "Value: %lf" : {

    },
    "Value: %lld" : {

    },
    "Version %@ (%@)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Version %1$@ (%2$@)"
          }
        }
      }
    },
    "Vertical" : {

    },
    "Vertical fixed height" : {

    },
    "View 0" : {

    },
    "View 1" : {

    },
    "View 2" : {

    },
    "View 3" : {

    },
    "View 4" : {

    },
    "View 5" : {

    },
    "View 6" : {

    },
    "View 7" : {

    },
    "View 8" : {

    },
    "View 9" : {

    },
    "View 10" : {

    },
    "View 11" : {

    },
    "View 12" : {

    },
    "View 13" : {

    },
    "View 14" : {

    },
    "View 15" : {

    },
    "View 16" : {

    },
    "View 17" : {

    },
    "View 18" : {

    },
    "View 19" : {

    },
    "View 20" : {

    },
    "View 21" : {

    },
    "View 22" : {

    },
    "View 23" : {

    },
    "View 24" : {

    },
    "View 25" : {

    },
    "View 26" : {

    },
    "View 27" : {

    },
    "View 28" : {

    },
    "View 29" : {

    },
    "View: %lld" : {

    },
    "Viewbuilder init" : {

    },
    "VStack" : {

    },
    "VStack maxWidth: .infinity" : {

    },
    "VStack minWidth: 20, maxWidth: .infinity" : {

    },
    "Welcome" : {
      "extractionState" : "stale",
      "localizations" : {
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Bienvenido"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Bienvenue"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ようこそ"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "欢迎"
          }
        }
      }
    },
    "White" : {

    },
    "White, Opacity" : {

    },
    "width: 100" : {

    },
    "width: 100, height: 50" : {

    },
    "width: 100, height: 100" : {

    },
    "With prompt" : {

    },
    "With zIndex" : {

    },
    "With zIndex before frame" : {

    },
    "withAnimation" : {

    },
    "withAnimation(.easeIn(duration: 1))" : {

    },
    "withAnimation(.spring)" : {

    },
    "withAnimation(repeatCount(3))" : {

    },
    "Without zIndex" : {

    },
    "Wrap: This is some long text that should wrap when it exceeds the width of its frame" : {

    },
    "Yellow" : {

    },
    "YES" : {

    },
    "ZIndex" : {
      "comment" : "Title of ZIndex playground"
    }
  },
  "version" : "1.0"
}